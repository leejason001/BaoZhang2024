# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2024-03-08 08:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16)),
                ('summary', models.CharField(max_length=64)),
                ('ctime', models.DateTimeField()),
                ('articleType', models.IntegerField(choices=[(0, 'Python'), (1, 'Linux'), (2, 'OpenStack'), (3, 'GoLang')])),
            ],
        ),
        migrations.CreateModel(
            name='articlesDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='blogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('summary', models.CharField(max_length=128)),
                ('surfix', models.CharField(max_length=64)),
                ('theme', models.IntegerField(choices=[(0, 'skyBlue'), (1, 'fireRed')])),
            ],
        ),
        migrations.CreateModel(
            name='classifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('className', models.CharField(max_length=16)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.blogs')),
            ],
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=128)),
                ('ctime', models.DateTimeField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.articles')),
                ('parentComment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='back', to='repository.comments')),
            ],
        ),
        migrations.CreateModel(
            name='labelArticleRelationShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.articles')),
            ],
        ),
        migrations.CreateModel(
            name='labels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labelName', models.CharField(max_length=16)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.blogs')),
            ],
        ),
        migrations.CreateModel(
            name='readerAttitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attitude', models.IntegerField(choices=[(0, 'favor'), (1, 'oppose')])),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.articles')),
            ],
        ),
        migrations.CreateModel(
            name='reportTroubles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField()),
                ('title', models.CharField(max_length=32)),
                ('detail', models.CharField(max_length=256)),
                ('ctime', models.DateTimeField()),
                ('Dtime', models.DateTimeField()),
                ('status', models.IntegerField(choices=[(0, 'willDeal'), (1, 'Dealing'), (2, 'Dealed')])),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=16)),
                ('password', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=16)),
                ('headPicture_path', models.CharField(max_length=128)),
            ],
        ),
        migrations.AddField(
            model_name='reporttroubles',
            name='dealPerson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deal_person', to='repository.users'),
        ),
        migrations.AddField(
            model_name='reporttroubles',
            name='reportPerson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_person', to='repository.users'),
        ),
        migrations.AddField(
            model_name='readerattitude',
            name='reader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.users'),
        ),
        migrations.AddField(
            model_name='labelarticlerelationship',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.labels'),
        ),
        migrations.AddField(
            model_name='comments',
            name='reader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.users'),
        ),
        migrations.AddField(
            model_name='blogs',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.users'),
        ),
        migrations.AddField(
            model_name='articles',
            name='classification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.classifications'),
        ),
        migrations.AddField(
            model_name='articles',
            name='detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.articlesDetail'),
        ),
        migrations.AddField(
            model_name='articles',
            name='ownerBlog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.blogs'),
        ),
        migrations.AlterUniqueTogether(
            name='readerattitude',
            unique_together=set([('reader', 'article')]),
        ),
        migrations.AlterUniqueTogether(
            name='labelarticlerelationship',
            unique_together=set([('label', 'article')]),
        ),
    ]
